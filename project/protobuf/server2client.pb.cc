// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server2client.proto

#include "server2client.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_server2client_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_server2client_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HexagonCoordinate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_server2client_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_HexagonProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_server2client_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Player;
}  // namespace protobuf_server2client_2eproto
namespace server2client {
class HexagonCoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HexagonCoordinate>
      _instance;
} _HexagonCoordinate_default_instance_;
class HexagonPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HexagonProperty>
      _instance;
} _HexagonProperty_default_instance_;
class TailPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TailProperty>
      _instance;
} _TailProperty_default_instance_;
class PlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Player>
      _instance;
} _Player_default_instance_;
class PacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Packet>
      _instance;
} _Packet_default_instance_;
}  // namespace server2client
namespace protobuf_server2client_2eproto {
static void InitDefaultsHexagonCoordinate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::server2client::_HexagonCoordinate_default_instance_;
    new (ptr) ::server2client::HexagonCoordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2client::HexagonCoordinate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HexagonCoordinate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHexagonCoordinate}, {}};

static void InitDefaultsHexagonProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::server2client::_HexagonProperty_default_instance_;
    new (ptr) ::server2client::HexagonProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2client::HexagonProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HexagonProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHexagonProperty}, {
      &protobuf_server2client_2eproto::scc_info_HexagonCoordinate.base,}};

static void InitDefaultsTailProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::server2client::_TailProperty_default_instance_;
    new (ptr) ::server2client::TailProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2client::TailProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TailProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTailProperty}, {
      &protobuf_server2client_2eproto::scc_info_HexagonCoordinate.base,}};

static void InitDefaultsPlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::server2client::_Player_default_instance_;
    new (ptr) ::server2client::Player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2client::Player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlayer}, {
      &protobuf_server2client_2eproto::scc_info_HexagonCoordinate.base,}};

static void InitDefaultsPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::server2client::_Packet_default_instance_;
    new (ptr) ::server2client::Packet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::server2client::Packet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Packet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPacket}, {
      &protobuf_server2client_2eproto::scc_info_Player.base,
      &protobuf_server2client_2eproto::scc_info_HexagonProperty.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HexagonCoordinate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HexagonProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TailProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Packet.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonCoordinate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonCoordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonCoordinate, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonCoordinate, r_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonProperty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonProperty, hex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::HexagonProperty, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::TailProperty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::TailProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::TailProperty, hex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::TailProperty, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::TailProperty, id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, expansion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Player, kills_),
  1,
  2,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Packet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Packet, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Packet, areas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::server2client::Packet, tails_),
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::server2client::HexagonCoordinate)},
  { 9, 16, sizeof(::server2client::HexagonProperty)},
  { 18, 26, sizeof(::server2client::TailProperty)},
  { 29, 39, sizeof(::server2client::Player)},
  { 44, 52, sizeof(::server2client::Packet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2client::_HexagonCoordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2client::_HexagonProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2client::_TailProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2client::_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::server2client::_Packet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "server2client.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023server2client.proto\022\rserver2client\")\n\021"
      "HexagonCoordinate\022\t\n\001q\030\001 \002(\005\022\t\n\001r\030\002 \002(\005\""
      "L\n\017HexagonProperty\022-\n\003hex\030\001 \002(\0132 .server"
      "2client.HexagonCoordinate\022\n\n\002id\030\002 \002(\005\"q\n"
      "\014TailProperty\022-\n\003hex\030\001 \002(\0132 .server2clie"
      "nt.HexagonCoordinate\022&\n\tdirection\030\002 \002(\0162"
      "\023.server2client.Move\022\n\n\002id\030\003 \002(\005\"\222\001\n\006Pla"
      "yer\022\n\n\002id\030\001 \002(\005\022&\n\tdirection\030\002 \002(\0162\023.ser"
      "ver2client.Move\0222\n\010position\030\003 \002(\0132 .serv"
      "er2client.HexagonCoordinate\022\021\n\texpansion"
      "\030\004 \002(\005\022\r\n\005kills\030\005 \002(\005\"\216\001\n\006Packet\022&\n\007play"
      "ers\030\001 \003(\0132\025.server2client.Player\022-\n\005area"
      "s\030\002 \003(\0132\036.server2client.HexagonProperty\022"
      "-\n\005tails\030\003 \003(\0132\036.server2client.HexagonPr"
      "operty*R\n\004Move\022\006\n\002UP\020\000\022\014\n\010RIGHT_UP\020\001\022\016\n\n"
      "RIGHT_DOWN\020\002\022\010\n\004DOWN\020\003\022\r\n\tLEFT_DOWN\020\004\022\013\n"
      "\007LEFT_UP\020\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 650);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server2client.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_server2client_2eproto
namespace server2client {
const ::google::protobuf::EnumDescriptor* Move_descriptor() {
  protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server2client_2eproto::file_level_enum_descriptors[0];
}
bool Move_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HexagonCoordinate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HexagonCoordinate::kQFieldNumber;
const int HexagonCoordinate::kRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HexagonCoordinate::HexagonCoordinate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server2client_2eproto::scc_info_HexagonCoordinate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2client.HexagonCoordinate)
}
HexagonCoordinate::HexagonCoordinate(const HexagonCoordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&q_, &from.q_,
    static_cast<size_t>(reinterpret_cast<char*>(&r_) -
    reinterpret_cast<char*>(&q_)) + sizeof(r_));
  // @@protoc_insertion_point(copy_constructor:server2client.HexagonCoordinate)
}

void HexagonCoordinate::SharedCtor() {
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&r_) -
      reinterpret_cast<char*>(&q_)) + sizeof(r_));
}

HexagonCoordinate::~HexagonCoordinate() {
  // @@protoc_insertion_point(destructor:server2client.HexagonCoordinate)
  SharedDtor();
}

void HexagonCoordinate::SharedDtor() {
}

void HexagonCoordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HexagonCoordinate::descriptor() {
  ::protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HexagonCoordinate& HexagonCoordinate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server2client_2eproto::scc_info_HexagonCoordinate.base);
  return *internal_default_instance();
}


void HexagonCoordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:server2client.HexagonCoordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&q_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&r_) -
        reinterpret_cast<char*>(&q_)) + sizeof(r_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HexagonCoordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2client.HexagonCoordinate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 q = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_q();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &q_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 r = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2client.HexagonCoordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2client.HexagonCoordinate)
  return false;
#undef DO_
}

void HexagonCoordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2client.HexagonCoordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 q = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->q(), output);
  }

  // required int32 r = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->r(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:server2client.HexagonCoordinate)
}

::google::protobuf::uint8* HexagonCoordinate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2client.HexagonCoordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 q = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->q(), target);
  }

  // required int32 r = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->r(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2client.HexagonCoordinate)
  return target;
}

size_t HexagonCoordinate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:server2client.HexagonCoordinate)
  size_t total_size = 0;

  if (has_q()) {
    // required int32 q = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->q());
  }

  if (has_r()) {
    // required int32 r = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());
  }

  return total_size;
}
size_t HexagonCoordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2client.HexagonCoordinate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 q = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->q());

    // required int32 r = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->r());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HexagonCoordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2client.HexagonCoordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const HexagonCoordinate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HexagonCoordinate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2client.HexagonCoordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2client.HexagonCoordinate)
    MergeFrom(*source);
  }
}

void HexagonCoordinate::MergeFrom(const HexagonCoordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2client.HexagonCoordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      q_ = from.q_;
    }
    if (cached_has_bits & 0x00000002u) {
      r_ = from.r_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HexagonCoordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2client.HexagonCoordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HexagonCoordinate::CopyFrom(const HexagonCoordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2client.HexagonCoordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HexagonCoordinate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void HexagonCoordinate::Swap(HexagonCoordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HexagonCoordinate::InternalSwap(HexagonCoordinate* other) {
  using std::swap;
  swap(q_, other->q_);
  swap(r_, other->r_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HexagonCoordinate::GetMetadata() const {
  protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HexagonProperty::InitAsDefaultInstance() {
  ::server2client::_HexagonProperty_default_instance_._instance.get_mutable()->hex_ = const_cast< ::server2client::HexagonCoordinate*>(
      ::server2client::HexagonCoordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HexagonProperty::kHexFieldNumber;
const int HexagonProperty::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HexagonProperty::HexagonProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server2client_2eproto::scc_info_HexagonProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2client.HexagonProperty)
}
HexagonProperty::HexagonProperty(const HexagonProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hex()) {
    hex_ = new ::server2client::HexagonCoordinate(*from.hex_);
  } else {
    hex_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:server2client.HexagonProperty)
}

void HexagonProperty::SharedCtor() {
  ::memset(&hex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&hex_)) + sizeof(id_));
}

HexagonProperty::~HexagonProperty() {
  // @@protoc_insertion_point(destructor:server2client.HexagonProperty)
  SharedDtor();
}

void HexagonProperty::SharedDtor() {
  if (this != internal_default_instance()) delete hex_;
}

void HexagonProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HexagonProperty::descriptor() {
  ::protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HexagonProperty& HexagonProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server2client_2eproto::scc_info_HexagonProperty.base);
  return *internal_default_instance();
}


void HexagonProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:server2client.HexagonProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(hex_ != NULL);
    hex_->Clear();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HexagonProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2client.HexagonProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .server2client.HexagonCoordinate hex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2client.HexagonProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2client.HexagonProperty)
  return false;
#undef DO_
}

void HexagonProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2client.HexagonProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .server2client.HexagonCoordinate hex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hex(), output);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:server2client.HexagonProperty)
}

::google::protobuf::uint8* HexagonProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2client.HexagonProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .server2client.HexagonCoordinate hex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hex(), deterministic, target);
  }

  // required int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2client.HexagonProperty)
  return target;
}

size_t HexagonProperty::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:server2client.HexagonProperty)
  size_t total_size = 0;

  if (has_hex()) {
    // required .server2client.HexagonCoordinate hex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hex_);
  }

  if (has_id()) {
    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t HexagonProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2client.HexagonProperty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .server2client.HexagonCoordinate hex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hex_);

    // required int32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HexagonProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2client.HexagonProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const HexagonProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HexagonProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2client.HexagonProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2client.HexagonProperty)
    MergeFrom(*source);
  }
}

void HexagonProperty::MergeFrom(const HexagonProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2client.HexagonProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_hex()->::server2client::HexagonCoordinate::MergeFrom(from.hex());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HexagonProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2client.HexagonProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HexagonProperty::CopyFrom(const HexagonProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2client.HexagonProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HexagonProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_hex()) {
    if (!this->hex_->IsInitialized()) return false;
  }
  return true;
}

void HexagonProperty::Swap(HexagonProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HexagonProperty::InternalSwap(HexagonProperty* other) {
  using std::swap;
  swap(hex_, other->hex_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HexagonProperty::GetMetadata() const {
  protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TailProperty::InitAsDefaultInstance() {
  ::server2client::_TailProperty_default_instance_._instance.get_mutable()->hex_ = const_cast< ::server2client::HexagonCoordinate*>(
      ::server2client::HexagonCoordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TailProperty::kHexFieldNumber;
const int TailProperty::kDirectionFieldNumber;
const int TailProperty::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TailProperty::TailProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server2client_2eproto::scc_info_TailProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2client.TailProperty)
}
TailProperty::TailProperty(const TailProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hex()) {
    hex_ = new ::server2client::HexagonCoordinate(*from.hex_);
  } else {
    hex_ = NULL;
  }
  ::memcpy(&direction_, &from.direction_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&direction_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:server2client.TailProperty)
}

void TailProperty::SharedCtor() {
  ::memset(&hex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&hex_)) + sizeof(id_));
}

TailProperty::~TailProperty() {
  // @@protoc_insertion_point(destructor:server2client.TailProperty)
  SharedDtor();
}

void TailProperty::SharedDtor() {
  if (this != internal_default_instance()) delete hex_;
}

void TailProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TailProperty::descriptor() {
  ::protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TailProperty& TailProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server2client_2eproto::scc_info_TailProperty.base);
  return *internal_default_instance();
}


void TailProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:server2client.TailProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(hex_ != NULL);
    hex_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&direction_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&direction_)) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TailProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2client.TailProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .server2client.HexagonCoordinate hex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .server2client.Move direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::server2client::Move_IsValid(value)) {
            set_direction(static_cast< ::server2client::Move >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2client.TailProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2client.TailProperty)
  return false;
#undef DO_
}

void TailProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2client.TailProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .server2client.HexagonCoordinate hex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_hex(), output);
  }

  // required .server2client.Move direction = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // required int32 id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:server2client.TailProperty)
}

::google::protobuf::uint8* TailProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2client.TailProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .server2client.HexagonCoordinate hex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_hex(), deterministic, target);
  }

  // required .server2client.Move direction = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // required int32 id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2client.TailProperty)
  return target;
}

size_t TailProperty::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:server2client.TailProperty)
  size_t total_size = 0;

  if (has_hex()) {
    // required .server2client.HexagonCoordinate hex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hex_);
  }

  if (has_direction()) {
    // required .server2client.Move direction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  if (has_id()) {
    // required int32 id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  return total_size;
}
size_t TailProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2client.TailProperty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .server2client.HexagonCoordinate hex = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hex_);

    // required .server2client.Move direction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());

    // required int32 id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TailProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2client.TailProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const TailProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TailProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2client.TailProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2client.TailProperty)
    MergeFrom(*source);
  }
}

void TailProperty::MergeFrom(const TailProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2client.TailProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_hex()->::server2client::HexagonCoordinate::MergeFrom(from.hex());
    }
    if (cached_has_bits & 0x00000002u) {
      direction_ = from.direction_;
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TailProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2client.TailProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TailProperty::CopyFrom(const TailProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2client.TailProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TailProperty::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_hex()) {
    if (!this->hex_->IsInitialized()) return false;
  }
  return true;
}

void TailProperty::Swap(TailProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TailProperty::InternalSwap(TailProperty* other) {
  using std::swap;
  swap(hex_, other->hex_);
  swap(direction_, other->direction_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TailProperty::GetMetadata() const {
  protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Player::InitAsDefaultInstance() {
  ::server2client::_Player_default_instance_._instance.get_mutable()->position_ = const_cast< ::server2client::HexagonCoordinate*>(
      ::server2client::HexagonCoordinate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Player::kIdFieldNumber;
const int Player::kDirectionFieldNumber;
const int Player::kPositionFieldNumber;
const int Player::kExpansionFieldNumber;
const int Player::kKillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Player::Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server2client_2eproto::scc_info_Player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2client.Player)
}
Player::Player(const Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::server2client::HexagonCoordinate(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&kills_) -
    reinterpret_cast<char*>(&id_)) + sizeof(kills_));
  // @@protoc_insertion_point(copy_constructor:server2client.Player)
}

void Player::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kills_) -
      reinterpret_cast<char*>(&position_)) + sizeof(kills_));
}

Player::~Player() {
  // @@protoc_insertion_point(destructor:server2client.Player)
  SharedDtor();
}

void Player::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Player::descriptor() {
  ::protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Player& Player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server2client_2eproto::scc_info_Player.base);
  return *internal_default_instance();
}


void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:server2client.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(position_ != NULL);
    position_->Clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&kills_) -
        reinterpret_cast<char*>(&id_)) + sizeof(kills_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2client.Player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .server2client.Move direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::server2client::Move_IsValid(value)) {
            set_direction(static_cast< ::server2client::Move >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .server2client.HexagonCoordinate position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 expansion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_expansion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &expansion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 kills = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_kills();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2client.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2client.Player)
  return false;
#undef DO_
}

void Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2client.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .server2client.Move direction = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // required .server2client.HexagonCoordinate position = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position(), output);
  }

  // required int32 expansion = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->expansion(), output);
  }

  // required int32 kills = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kills(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:server2client.Player)
}

::google::protobuf::uint8* Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2client.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .server2client.Move direction = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // required .server2client.HexagonCoordinate position = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position(), deterministic, target);
  }

  // required int32 expansion = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->expansion(), target);
  }

  // required int32 kills = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kills(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2client.Player)
  return target;
}

size_t Player::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:server2client.Player)
  size_t total_size = 0;

  if (has_position()) {
    // required .server2client.HexagonCoordinate position = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_direction()) {
    // required .server2client.Move direction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  if (has_expansion()) {
    // required int32 expansion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expansion());
  }

  if (has_kills()) {
    // required int32 kills = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kills());
  }

  return total_size;
}
size_t Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2client.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .server2client.HexagonCoordinate position = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);

    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required .server2client.Move direction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());

    // required int32 expansion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->expansion());

    // required int32 kills = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kills());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2client.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2client.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2client.Player)
    MergeFrom(*source);
  }
}

void Player::MergeFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2client.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::server2client::HexagonCoordinate::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      direction_ = from.direction_;
    }
    if (cached_has_bits & 0x00000008u) {
      expansion_ = from.expansion_;
    }
    if (cached_has_bits & 0x00000010u) {
      kills_ = from.kills_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2client.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2client.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Player::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  return true;
}

void Player::Swap(Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Player::InternalSwap(Player* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(id_, other->id_);
  swap(direction_, other->direction_);
  swap(expansion_, other->expansion_);
  swap(kills_, other->kills_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Player::GetMetadata() const {
  protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Packet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kPlayersFieldNumber;
const int Packet::kAreasFieldNumber;
const int Packet::kTailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server2client_2eproto::scc_info_Packet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:server2client.Packet)
}
Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      players_(from.players_),
      areas_(from.areas_),
      tails_(from.tails_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:server2client.Packet)
}

void Packet::SharedCtor() {
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:server2client.Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
}

void Packet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  ::protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Packet& Packet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server2client_2eproto::scc_info_Packet.base);
  return *internal_default_instance();
}


void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:server2client.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  areas_.Clear();
  tails_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:server2client.Packet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .server2client.Player players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .server2client.HexagonProperty areas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_areas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .server2client.HexagonProperty tails = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tails()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:server2client.Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:server2client.Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:server2client.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .server2client.Player players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->players(static_cast<int>(i)),
      output);
  }

  // repeated .server2client.HexagonProperty areas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->areas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->areas(static_cast<int>(i)),
      output);
  }

  // repeated .server2client.HexagonProperty tails = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tails_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->tails(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:server2client.Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:server2client.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .server2client.Player players = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->players(static_cast<int>(i)), deterministic, target);
  }

  // repeated .server2client.HexagonProperty areas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->areas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->areas(static_cast<int>(i)), deterministic, target);
  }

  // repeated .server2client.HexagonProperty tails = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tails_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->tails(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:server2client.Packet)
  return target;
}

size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:server2client.Packet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .server2client.Player players = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // repeated .server2client.HexagonProperty areas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->areas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->areas(static_cast<int>(i)));
    }
  }

  // repeated .server2client.HexagonProperty tails = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tails_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tails(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:server2client.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:server2client.Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:server2client.Packet)
    MergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:server2client.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  areas_.MergeFrom(from.areas_);
  tails_.MergeFrom(from.tails_);
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:server2client.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:server2client.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->areas())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tails())) return false;
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  using std::swap;
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  CastToBase(&areas_)->InternalSwap(CastToBase(&other->areas_));
  CastToBase(&tails_)->InternalSwap(CastToBase(&other->tails_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_server2client_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server2client_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server2client
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2client::HexagonCoordinate* Arena::CreateMaybeMessage< ::server2client::HexagonCoordinate >(Arena* arena) {
  return Arena::CreateInternal< ::server2client::HexagonCoordinate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2client::HexagonProperty* Arena::CreateMaybeMessage< ::server2client::HexagonProperty >(Arena* arena) {
  return Arena::CreateInternal< ::server2client::HexagonProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2client::TailProperty* Arena::CreateMaybeMessage< ::server2client::TailProperty >(Arena* arena) {
  return Arena::CreateInternal< ::server2client::TailProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2client::Player* Arena::CreateMaybeMessage< ::server2client::Player >(Arena* arena) {
  return Arena::CreateInternal< ::server2client::Player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::server2client::Packet* Arena::CreateMaybeMessage< ::server2client::Packet >(Arena* arena) {
  return Arena::CreateInternal< ::server2client::Packet >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
